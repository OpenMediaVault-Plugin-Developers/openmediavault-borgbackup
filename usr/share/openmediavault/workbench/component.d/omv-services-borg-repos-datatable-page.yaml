version: "1.0"
type: component
data:
  name: omv-services-borgbackup-repos-datatable-page
  type: datatablePage
  config:
    autoReload: false
    hasSearchField: true
    stateId: bce5761c-b0e0-11e7-993b-27be4a786741
    sorters:
      - dir: asc
        prop: name
    store:
      proxy:
        service: BorgBackup
        get:
          method: getRepoList
    columns:
      - name: _("Name")
        prop: name
        flexGrow: 1
        sortable: true
      - name: _("Type")
        prop: type
        flexGrow: 1
        sortable: true
      - name: _("Shared Folder")
        prop: sharedfoldername
        flexGrow: 1
        sortable: true
      - name: _("SharedFolderRef")
        prop: sharedfolderref
        flexGrow: 1
        sortable: true
        hidden: true
      - name: _("Remote Path")
        prop: uri
        flexGrow: 2
        sortable: true
      - name: _("Encryption")
        prop: encryption
        sortable: true
        cellTemplateName: checkIcon
        flexGrow: 1
      - name: _("Mounted")
        prop: mounted
        sortable: true
        cellTemplateName: checkIcon
        flexGrow: 1
      - name: _("Archives")
        prop: archiveCount
        sortable: true
        flexGrow: 1
    actions:
      - template: create
        execute:
          type: url
          url: "/services/borgbackup/repos/create"
      - type: iconButton
        tooltip: _("Change location")
        icon: edit
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: formDialog
          formDialog:
            title: _("Change location")
            fields:
              - type: hidden
                name: uuid
                value: "{{ _selected[0].uuid }}"
              - type: hint
                hintType: info
                text: _("You must move the repo files before changing the location.")
              - type: textInput
                name: name
                label: _("Name")
                readonly: true
                value: "{{ _selected[0].name }}"
              - type: select
                name: type
                label: _("Type")
                value: "{{ _selected[0].type }}"
                store:
                  data:
                    - ["local", _("Local")]
                    - ["remote", _("Remote")]
              - type: sharedFolderSelect
                name: sharedfolderref
                label: _("Shared folder")
                value: "{{ _selected[0].sharedfolderref }}"
                modifiers:
                  - type: hidden
                    constraint:
                      operator: eq
                      arg0:
                        prop: type
                      arg1: "remote"
              - type: textInput
                name: uri
                label: _("Remote path")
                value: "{{ _selected[0].uri }}"
                hint: _("Must have ssh keys setup.  Remote path should be in the form&#58;  user@hostname&#58;path")
                modifiers:
                  - type: hidden
                    constraint:
                      operator: eq
                      arg0:
                        prop: type
                      arg1: "local"
                  - type: value
                    typeConfig: ""
                    constraint:
                      operator: eq
                      arg0:
                        prop: type
                      arg1: "local"
            buttons:
              submit:
                text: _("Change")
                execute:
                  type: request
                  request:
                    service: BorgBackup
                    method: changeRepoPath
                    progressMessage: _("Changing repo location ...")
                    successNotification: _("Repo location has been changed.")
      - type: iconButton
        tooltip: _("Remove")
        icon: mdi:archive-remove-outline
        confirmationDialogConfig:
          template: confirmation-danger
          message: _("Are you sure you want to remove repo from the plugin? This will not delete any files!")
        execute:
          type: request
          request:
            service: BorgBackup
            method: deleteRepo
            params:
              uuid: "{{ _selected[0].uuid }}"
              deleteFiles: false
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
      - type: iconButton
        tooltip: _("Delete + Files")
        icon: mdi:delete-sweep-outline
        confirmationDialogConfig:
          template: confirmation-critical
          message: _("Are you sure you want to delete the repo from the plugin and the repo files? This will delete all repo files!")
        execute:
          type: request
          request:
            service: BorgBackup
            method: deleteRepo
            params:
              uuid: "{{ _selected[0].uuid }}"
              deleteFiles: true
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: eq
              arg0:
                prop: archiveCount
              arg1: 0
      - type: iconButton
        tooltip: _("Change passphrase")
        icon: mdi:lock-reset
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: truthy
              arg0:
                prop: encryption
        execute:
          type: formDialog
          formDialog:
            title: _("Change passphrase")
            fields:
              - type: hidden
                name: uuid
                value: "{{ _selected[0].uuid }}"
              - type: passwordInput
                name: passphrase
                label: _("Passphrase")
                value: ""
            buttons:
              submit:
                text: _("Change")
                execute:
                  type: request
                  request:
                    service: BorgBackup
                    method: changePassphrase
      - type: menu
        icon: mdi:check-underline
        tooltip: _("Check")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        actions:
          - text: _("All")
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("Check all ...")
                  startOnInit: true
                  request:
                    service: BorgBackup
                    method: repoCommand
                    params:
                      command: "all"
                      uuid: "{{ _selected[0].uuid }}"
                  buttons:
                    stop:
                      hidden: true
          - text: _("Repos only")
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("Check repos only ...")
                  startOnInit: true
                  request:
                    service: BorgBackup
                    method: repoCommand
                    params:
                      command: "repo"
                      uuid: "{{ _selected[0].uuid }}"
                  buttons:
                    stop:
                      hidden: true
          - text: _("Archives only")
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("Check archives only ...")
                  startOnInit: true
                  request:
                    service: BorgBackup
                    method: repoCommand
                    params:
                      command: "archives"
                      uuid: "{{ _selected[0].uuid }}"
                  buttons:
                    stop:
                      hidden: true
          - text: _("Verify")
            execute:
              type: taskDialog
              taskDialog:
                config:
                  title: _("Check repo ...")
                  startOnInit: true
                  request:
                    service: BorgBackup
                    method: repoCommand
                    params:
                      command: "verify"
                      uuid: "{{ _selected[0].uuid }}"
                  buttons:
                    stop:
                      hidden: true
      - type: iconButton
        tooltip: _("Export")
        icon: mdi:export
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: formDialog
          formDialog:
            title: _("Extract archive to tar file")
            fields:
              - type: hidden
                name: uuid
                value: "{{ _selected[0].uuid }}"
              - type: select
                name: archive
                label: _("Archive")
                placeholder: _("Select an archive ...")
                valueField: name
                textField: name
                store:
                  proxy:
                    service: BorgBackup
                    get:
                      method: enumerateArchives
                      params:
                        uuid: "{{ _selected[0].uuid }}"
              - type: sharedFolderSelect
                name: sharedfolderref
                label: _("Shared folder")
                hint: _("Export file will be created in this directory with a filename matching the archive name with an extension of .tar.gz.")
            buttons:
              submit:
                text: _("Export")
                execute:
                  type: request
                  request:
                    service: BorgBackup
                    method: exportArchive
      - type: iconButton
        tooltip: _("Extract")
        icon: mdi:folder-move-outline
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: formDialog
          formDialog:
            title: _("Extract archive to directory")
            fields:
              - type: hidden
                name: uuid
                value: "{{ _selected[0].uuid }}"
              - type: select
                name: archive
                label: _("Archive")
                placeholder: _("Select an archive ...")
                valueField: name
                textField: name
                store:
                  proxy:
                    service: BorgBackup
                    get:
                      method: enumerateArchives
                      params:
                        uuid: "{{ _selected[0].uuid }}"
              - type: checkbox
                name: original
                label: _("Original location")
                value: false
              - type: sharedFolderSelect
                name: sharedfolderref
                label: _("Shared folder")
                value: ""
                modifiers:
                  - type: visible
                    constraint:
                      operator: falsy
                      arg0:
                        prop: original
            buttons:
              submit:
                text: _("Extract")
                execute:
                  type: request
                  request:
                    service: BorgBackup
                    method: extractArchive
      - type: iconButton
        tooltip: _("List")
        icon: mdi:format-list-bulleted-square
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("Check repo ...")
              startOnInit: true
              request:
                service: BorgBackup
                method: repoCommand
                params:
                  command: "list"
                  uuid: "{{ _selected[0].uuid }}"
              buttons:
                stop:
                  hidden: true
      - type: iconButton
        tooltip: _("Compact")
        icon: mdi:arrow-collapse-vertical
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("Compact repo ...")
              startOnInit: true
              request:
                service: BorgBackup
                method: repoCommand
                params:
                  command: "compact"
                  uuid: "{{ _selected[0].uuid }}"
              buttons:
                stop:
                  hidden: true
      - type: iconButton
        tooltip: _("Info")
        icon: mdi:folder-information-outline
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
        execute:
          type: taskDialog
          taskDialog:
            config:
              title: _("Repo info ...")
              startOnInit: true
              request:
                service: BorgBackup
                method: repoCommand
                params:
                  command: "info"
                  uuid: "{{ _selected[0].uuid }}"
      - type: iconButton
        icon: mdi:download
        tooltip: _("Download repo keyfile")
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: truthy
              arg0:
                prop: encryption
        execute:
          type: url
          url: '/download?service=Borgbackup&method=downloadKey&params={"uuid":"{{ _selected[0].uuid }}"}'
      - type: iconButton
        tooltip: _("Mount")
        icon: mdi:play-outline
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: falsy
              arg0:
                prop: mounted
        execute:
          type: formDialog
          formDialog:
            title: _("Mount repo")
            fields:
              - type: hidden
                name: uuid
                value: "{{ _selected[0].uuid }}"
              - type: sharedFolderSelect
                name: sharedfolderref
                label: _("Shared folder")
                hint: _("Repo will be mounted as a subfolder in the shared folder with the same name as the repo.")
              - type: checkbox
                name: versions
                label: _("Versions")
                value: false
                hint: _("Gives a merged, versioned view of the files in the archives. EXPERIMENTAL")
            buttons:
              submit:
                text: _("Mount")
                execute:
                  type: request
                  request:
                    service: BorgBackup
                    method: mountRepo
                    progressMessage: _("Mounting repo ...")
                    successNotification: _("Repo has been mounted.")
      - type: iconButton
        tooptip: _("Unmount")
        icon: mdi:eject-outline
        enabledConstraints:
          minSelected: 1
          maxSelected: 1
          constraint:
            - operator: truthy
              arg0:
                prop: mounted
        execute:
          type: request
          request:
            service: BorgBackup
            method: unmountRepo
            params:
              uuid: "{{ _selected[0].uuid }}"
            progressMessage: _("Unmounting repo ...")
            successNotification: _("Repo has been unmounted.")
      - type: menu
        icon: mdi:link
        tooltip: _("Docs")
        actions:
          - text: _("borgbackup")
            icon: mdi:link-box
            execute:
              type: url
              url: '/externalRedirect/https%3A%2F%2Fborgbackup.readthedocs.io%2Fen%2Fstable%2Findex.html'
          - text: _("omv-extras wiki")
            icon: mdi:link-box
            execute:
              type: url
              url: '/externalRedirect/https%3A%2F%2Fwiki.omv-extras.org%2Fdoku.php%3Fid%3Domv7%3Aomv7_plugins%3Aborgbackup%0A'
